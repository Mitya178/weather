apiVersion: apps/v1
kind: Deployment
metadata:
  name: dmitriy-weather-deployment
  labels:
    project: dell
spec:
  replicas: 2
  selector:
    matchLabels:
      project: dell
  template:
    metadata:
      labels:
        project: dell
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: project
                operator: In
                values:
                - dell
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: mitya178/my_flask_app:TAG
        name: weather-image
        env:
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: secrets
              key: API
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: my-service
  labels:
    env: prod
    owner: DmitriyVoronkov
spec:
  selector:
    project: dell    # Selecting PODS with those Labels
  ports:
    - name: app-listener
      protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: weather-ingress
  namespace: default
spec:
  rules:
  - host: weather.p2.do-school.ru
    http:
      paths:
      - backend:
          service:
            name: my-service
            port:
              number: 80
        path: /
        pathType: Prefix

---
apiVersion: v1
data:
  API: N2FjZTk0NTJkNmM0MDc4MzAwMjNhZDQ4NGQxZGVjYWU=
kind: Secret
metadata:
  name: secrets
