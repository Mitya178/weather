pipeline {
  agent any
  options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
  }
  environment {
    DOCKERHUB_CREDENTIALS = credentials('mitya178-dockerhub')
  }
  stages {
    stage('Build') {
      steps {
        sh 'docker build -t my_flask_app:v0.1 .'
      }
    }
    stage('Login') {
      steps {
        sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
      }
    }
    stage('Push') {
      steps {
        sh '''
        docker tag my_flask_app:v0.1 mitya178/my_flask_app:v1
        docker push mitya178/my_flask_app:v1
        '''
      }
    }
    stage('Deployment') {
            steps {
		script {
		  def tag = org.apache.commons.lang.RandomStringUtils.randomAlphanumeric(10).toLowerCase()
                  println(tag)
                }
		withKubeConfig([credentialsId: 'jenkins4', serverUrl: 'https://94.26.239.41:6443']) {
                sh '''
		kubectl get nodes
                kubectl apply -f deployment.yaml
		'''
                        }
                    }
        }
  }
 post {
   always {
        sh 'docker logout'
    }
   }

}
